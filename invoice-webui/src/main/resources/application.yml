server:
  port: ${PORT:8080}

spring:
  application:
    name: invoice-webui
  logging:
    pattern:
      console: "%clr(%d{yyyy-MM-dd HH:mm:ss}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([${springAppName:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-}]){yellow} %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    level:
      org.springframework: WARN
      org.hibernate: WARN
  cache:
    #cache-names: dropbox, vimeo, consultantsperproject, billablehours, activeprojects, goodpeople, graphkey
    caffeine:
      spec: maximumSize=1000,expireAfterAccess=18000s
  jpa:
    hibernate.ddl-auto: none
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
        jdbc.time_zone: Europe/Berlin
  datasource:
    url: ${URL:jdbc:mysql://localhost:3306/usermanager?noDatetimeStringSync=true&characterEncoding=utf8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=true&serverTimezone=Europe/Berlin}
    username: ${USERNAME:root}
    password: ${PASSWORD:}
    driverClassName: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 2
  data:
    rest:
      basePath: /api
  mail:
    host: smtp.office365.com
    username: ${EMAILUSERNAME:xx}
    password: ${EMAILPASSWORD:xx}
    port: 587
    properties.mail.smtp.auth: true
    properties.mail.smtp.starttls.enable: true
  jackson.property-naming-strategy: SNAKE_CASE

activemq:
  broker-url: vm://embedded?broker.persistent=false,useShutdownHook=false
  in-memory: true
  non-blocking-redelivery: true
  packages:
    trust-all: false
    trusted: com.memorynotfound
  pool:
    block-if-full: true
    block-if-full-timeout: -1
    create-connection-on-startup: true
    enabled: false
    expiry-timeout: 0
    idle-timeout: 30000
    max-connections: 1
    maximum-active-session-per-connection: 500
    reconnect-on-exception: true
    time-between-expiration-check: -1
    use-anonymous-producers: true

  # Spring JMS Settings
jms:
  listener:
    acknowledge-mode: auto
    auto-startup: true
    concurrency: 5
    max-concurrency: 10
  pub-sub-domain: false
  template:
    default-destination:
    delivery-mode: non_persistent
    priority: 100
    qos-enabled: true
    receive-timeout: 1000
    time-to-live: 36000

rtmUrl: https://slack.com/api/rtm.start?token={token}&simple_latest&no_unreads
slackIncomingWebhookUrl: https://hooks.slack.com/services/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

halSlackBotToken: ${HALSLACKBOTTOKEN}
halOAuthAccessToken: ${HALOAUTHACCESSTOKEN}
halBotUserOAuthAccessToken: ${BOTUUSEROAUTHACCESSTOKEN}
motherSlackBotToken: ${MOTHERSLACKBOTTOKEN}
bubbleSlackBotToken: ${BUBBLESLACKBOTTOKEN}
bubbleSlackBotUserToken: ${BUBBLESLACKBOTUSERTOKEN}
slackBotToken: ${MOTHERSLACKBOTTOKEN}

vimeoToken: ${VIMEOTOKEN:xx}
dropboxToken: ${DROPBOXTOKEN:xx}

apiAiToken: ${APIAITOKEN:xx}

intra:
  email:
    onine: ${EMAILONLINE:true}

flyway:
  baseline-version: 1 # version to start migration
  enabled: false # Enable flyway.
  locations: classpath:db/migration # locations of migrations scripts
  schemas: usermanager
  baseline-on-migrate: true # schemas to update

management.security.enabled: false
